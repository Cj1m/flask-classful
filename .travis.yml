sudo: false
language: python
dist: xenial
env:
  global:
  - MOST_TESTED_PYTHON_VERSION=3.8
  - COVERAGE_PYTHON_VERSION=2.7
  - FLASK_LATEST=1.1.1
  matrix:
  - Flask=0.11
  - Flask=0.11.1
  - Flask=0.12
  - Flask=0.12.1
  - Flask=0.12.2
#  - Flask=0.12.3 # buggy, not supported, see related: https://github.com/dpgaspar/Flask-AppBuilder/issues/741
  - Flask=0.12.4
  - Flask=1.0
  - Flask=1.0.1
  - Flask=1.0.2
  - Flask=1.0.3
  - Flask=1.0.4
  - Flask=1.1.0
  - Flask=1.1.1
python:
- 2.7
#- 3.4
- 3.5
- 3.6
- 3.7
- 3.8
before_script:
- git config --global user.name "Teracy Bot"
- git config --global user.email "teracy.com@gmail.com"
- if [[ -z ${GH_REPO+x} ]]; then
  export GH_REPO=teracyhq/flask-classful; fi
- export REPO_URL_GITHUB="https://$GH_TOKEN@github.com/$GH_REPO.git"
- . ./.travis/setup.sh
- echo $DEPLOY_HTML_DIR
install:
- make resolve
- pip install Flask==$Flask
# test with webargs
# see: https://github.com/marshmallow-code/webargs/issues/355
- pip install webargs!=5.0.0
- python setup.py install
script:
- make test
after_script:
- if [[ ! -z ${DEPLOY_HTML_DIR+x} && $TRAVIS_PYTHON_VERSION == $MOST_TESTED_PYTHON_VERSION && $Flask == $FLASK_LATEST ]]; then
  pip install -r docs/requirements.txt && cd docs && make setup_gh_pages && make generate && make deploy; fi
after_success:
- if [[ $TRAVIS_PYTHON_VERSION == $COVERAGE_PYTHON_VERSION && $Flask == $FLASK_LATEST ]]; then pip install
  --quiet python-coveralls && make report-coverage && coveralls; fi
- make check-style
notifications:
  slack:
    on_success: change
    on_failure: always
    on_pull_requests: false
    rooms:
      secure: CkrarcR2syf+Eu9TbVX7Hdnz++/OzV8TrPxX01Ok6lIz45ItjFby3HohdGiv/LdqAF91qP6cHzoADByoAAIDyExjsfJimMDtLfX6ZWAq8/WBS0g8bqpBv7s0ydPNB51DgzJNRh7adVExT3dhqO4XKcKmgL5UIOTLcouopB/cCn6/p6/B4l9I7AccHPRcPfsxgQnyUQPjpe2tyg/kpr0OHn+jdsiv0aTF9vmC1hSr/h3vTNDjp10jwW8XLaZIYUvATmwwXbADDB4DOAuVHtBV92bmDSwyZiBV7hqU9mqqVSdkDoHp/6nGBtJpsgaGEvPESCm2LdJrvfJNg+goYrmbaIr07kuISvbEjQxTX2MPsxTJy0Qmre9Ki6yXlJ/rSxAo2G6FMAUiqpKVV86L3g9Sway7Ovp5ihlZoJGMcA79y8WYAuSDN6PjY9GVksXiWr0cKFzBf/sBRTS4Zn60JLJSDA57KPny6DITN0WrMQFzc0hVVLINRjUhR4Nwn8P1TZVMGN+LRCOGj1/8MTgiZA9JaQbhjoWng+1M5f7BE9NKgOVVXn1+F2EI+ik+tiMpFfyinUPdgHS3SnVkd7Ja7dI1YG4MuJiCqS5WnEGXCu0xCOKbM2JyUtfnsw/IgsLnZ52G9+eI9W8Qq0GQ8S95Z4qsniZo49tU9g5bSKiN5rKiUSY=
